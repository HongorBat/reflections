1.How did viewing a diff between two versions of a file help you see the bug that was introduced?
  I can see the difference between two versions of codes so i can see were developer made mistake.
2.How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
  It could be easy to just backup the old file but not really.
3.What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
  Pros having manually choosing is you can decide when commit cons are you can forget to commit, automatically saved pros you dont have to worry about manually saving, cons you will have a lot of useless commits
4.Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
  I think because git treats like a one whole project but google docs treats all their document separate files
5. How can you use the commands git log and git diff to view the history of files?
  git log helps to find commits easy and git diff can show changes
6.How might using version control make you more confident to make changes that could break something?
  Because I can easily go back and see what was causing the problem
7.Now that you have your workspace set up, what do you want to try using Git for?
  I want to try everything that git offers
